<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: php | Ivans Ardiansyah]]></title>
  <link href="http://ivansa.github.io/blog/categories/php/atom.xml" rel="self"/>
  <link href="http://ivansa.github.io/"/>
  <updated>2017-03-21T16:29:35+07:00</updated>
  <id>http://ivansa.github.io/</id>
  <author>
    <name><![CDATA[Ivans Ardiansyah]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tipe Data Dalam PHP]]></title>
    <link href="http://ivansa.github.io/tulisan/php/tipe-data-php/"/>
    <updated>2014-12-03T14:41:00+07:00</updated>
    <id>http://ivansa.github.io/tulisan/php/tipe-data-php</id>
    <content type="html"><![CDATA[<p>Setiap bahasa pemprograman pada umumnya pasti memiliki tipe data yang akan digunakan untuk
menentukan tipe/jenis/sifat dari suatu variable. Pada kesempatan kali ini saya akan menuliskan beberapa
tipe data yang ada di bahasa pemprograman PHP.</p>

<!--more-->


<p></p>

<p>Berikut ini 8 macam tipe data pada PHP, diantaranya :</p>

<h4>1. Integer</h4>


<p>Tipe data integer adalah tipe data yang berguna untuk menyimpan bilangan bulat,
bukan desimal. Sebagai contoh <code>(1),(2),(3),(4),(5),(-1),(-2),(-3),(-4) dan lain-lain</code>.
data ini memiliki range antara <code>-2,147,483,648</code> sampai dengan <code>+2,147,483,648</code> platform 32 bit.</p>

<p>Namun bila terdapat data diluar jangkauan tersebut, maka secara otomatis PHP akan mengkonversikannya ke dalam tipe data Floating Point.
Integer merupakan Tipe Data yang berisikan bilangan bulat negatif dan positif atautanpa ada nilai pecahan.</p>

<p>Tipe ini juga dapat dinyatakan dalam bentuk oktal (berbasis 8), desimal (berbasis 10), heksadesimal (berbasis 16). Seperti dalam contoh berikut :</p>

<p>```php
&lt;?php</p>

<pre><code>$oktal = 031;

$desimal = 25;
$heksadesimal = 0x10;
</code></pre>

<p>?>
```</p>

<h4>2. Double Floating</h4>


<p>Tipe data floating point numbers biasa juga disebut dengan “double”,
”float” atau “real” adalah tipe data yang berguna untuk menyimpan bilangan desimal.</p>

<p>Sebagai contoh <code>(0.1),(1.3),(1.7),(1.8),(9.7),(2.4) dan lain-lain</code>.</p>

<p>Contoh penulisannya :</p>

<p>```php
&lt;?php</p>

<pre><code>$a = 1.234;
$b = 1.2e3;
$c = 2E-6;
$d = 1.2E8;
</code></pre>

<p>?>
```</p>

<h4>3. Boolean</h4>


<p>Tipe Data ini adalah tipe data yang paling sederhana. Hanya berupa <code>true</code> atau <code>false</code>.
Cara memasukan ke dalam variabel adalah dengan memberikan nilai true atau false pada variabel tersebut.</p>

<p>Penulisannya tidak dipengaruhi penggunaan huruf besar atau kecil.<br />
Contoh penulisannya :</p>

<p>```php
&lt;?php</p>

<pre><code>$a = TRUE; //bernilai 1
$b = true; //bernilai 1
$c = FALSE; //bernilai 0
$d = false; //bernilai 0
</code></pre>

<p>?>
```</p>

<p>Setiap Tipe Data dalam PHP mempunyai Boolean untuk melakukan Seleksi Kondisi.
dan Tipe Data tersebut akan memberikan nilai true atau false pada seleksi kondisi tersebut.</p>

<ul>
    <li>Pada Variabel yang bertipe Data integer=0 (nol) mempunyai boolean false, selain itu true.</li>
    <li>Pada Variabel yang bertipe Data float=0.0 (nol) mempunyai boolean false, selain itu true.</li>
    <li>Array yang tidak mempunyai element mempunyai boolean false, selain itu true.</li>
    <li>Objek yang tidak mempunyai member mempunyai boolean false, selain itu true.</li>
    <li>Tipe NULL dan Variabel yang belum terisi mempunyai boolean false.</li>
</ul>




<h4>4. String</h4>


<p>String adalah sebuah tipe data yang terdiri dari kata, bisa berupa kata tunggal maupun kalimat.
Penulisan string harus diapit oleh tanda petik, baik petik tunggal <code>(‘ ‘)</code> maupun petik ganda <code>(” “)</code>.</p>

<p>Contoh penulisan tipe data string :</p>

<p>```php
&lt;?php</p>

<pre><code>$kata1 = 'String yang diapit oleh petik tunggal';
$kata2 = "String yang diapit oleh petik ganda";
</code></pre>

<p>?>
```</p>

<p>Perbedaan antara petik ganda dan petik tunggal adalah,
ketika kita menggunakan petik tunggal maka variabel didalam petik tunggal tidak akan terbaca nilainya.
Beda halnya dengan penggunaan petik genap yang akan membaca nilai dari suatu variabel.</p>

<p>Lebih spesifiknya :</p>

<p>```php
&lt;?php</p>

<pre><code>$kata = "halo dunia"
echo 'Apa kabar semua, $kata';
//Penggunaan petik tunggal, maka akan tampil (Apa kabar semua, $kata)
echo "Apa kabar semua, $kata";
//Penggunaan petik ganda, maka akan tampil (Apa kabar semua, halo dunia)
</code></pre>

<p>?>
```</p>

<p>Jika string yang tertutup dalam tanda kutip ganda <code>(” “)</code>,
PHP akan menafsirkan escape sequence lebih untuk karakter khusus.
Maka penulisan untuk karakter khusus tersebut harus ditambahkan slash didepan karakter tersebut.</p>

<h4>5. Object</h4>


<p>Tipe data object dibuat dengan tujuan agar para programmer terbiasa dengan OOP.
Tipe data object bisa berupa bilangan, variabel atau fungsi.
Data ini dapat dimasukkan ke dalam kode program sehingga meringkas beberapa fungsi dan memperkecil ukuran file.</p>

<p>Agar lebih mudah dapat menggunakan variabel dengan nilai string :</p>

<p>```php
&lt;?php</p>

<pre><code>class Nama {
    var $jenis = "halo dunia";
    function gantiNama($jenis){
        $this-&gt;jenis = $jenis;
    }
}
$nama = new Nama;
echo $nama-&gt;jenis;
$nama-&gt;gantiNama("halo semua");
echo "&lt;br&gt;".$nama-&gt;jenis;

/*
Output :
    halo dunia
    halo semua
*/
</code></pre>

<p>?>
```</p>

<h4>6. Array</h4>


<p>Array atau Larik merupakan Tipe Compound Primitif,
terdapat juga pada bahasa-bahasa pemrograman lain.
Tipe data array digunakan untuk menyimpan banyak data dalam satu variabel.</p>

<p>Jenis array dalam php ada 3 (tiga) macam yakni :</p>

<ol>
    <li><b>Numeric Array</b> <br />
        
```php
<?php
    $hari[0] = "Senin";
    $hari[1] = "Selasa";
    $hari[2] = "Rabu";
    $hari[3] = "Kamis";
    $hari[4] = "Jumat";
    $hari[5] = "Sabtu";
    $hari[6] = "Minggu";
    
    for($i = 0; $i <= 6; $i++){
        echo $hari[$i]."<br />";
    }
    
?>
```

        Pada contoh numeric array diatas dapat disimpulkan bahwa pemanggilan data array tersebut menggunakan angka, 
        angka dimulai dari 0 sampai jumlah data yang dimasukkan. 
        <code>$hari[0]</code> adalah pemanggilan untuk data pertama, 
        <code>$hari[1]</code> adalah pemanggilan untuk data kedua dan seterusnya.<br /><br />
    </li>
    
    <li><b>Associative Array</b>  <br />

```php
<?php
    $hari = array("Senin" => "Ayam", 
                  "Selas" => "Lele", 
                  "Rabu" => "Pecel"
                  "Kamis" => "Teri"
                  "Jumat" => "Rendang"
                  "Sabtu" => "Tempe"
                  "Minggu" => "Tahu");
    
    //Menampilkan salah satu isi array
    echo "Menu makanan hari senin adalah $hari[Senin]";
    
?>
```

    Pada contoh associative array diatas dapat disimpulkan bahwa pemanggilan data array tersebut 
    menggunakan <code>string</code> yang ditentukan oleh kita, 
    dengan kata lain pemanggilan menggunakan angka kita ganti menjadi <code>string</code> yang kita inginkan.<br /><br />
    </li>
    
    <li><b>Multidimensional Array</b>   <br />
    Pengertian multidimension array adalah array didalam array. 
    Pemanggilan array ini bisa menggunakan numeric array maupun associative array. 
    <code>$makan[0]["pagi"]</code> dapat diartikan sebagai menampilkan nilai array pertama dan array pagi dari variabel makan, 
    <code>$makan["senin"]["pagi"]</code> dapat diartikan sebagai menampilkan nilai array senin dan array pagi dari variabel makan.
    
```php
<?php
    $makan = array(
        array("pagi" => "bubur", "siang" => "nasi", "sore" => "nasi"), 
        array("pagi" => "ayam", "siang" => "sayur", "sore" => "tahu") 
    );
    
    echo "Menu makan siang adalah $makan[0][siang] dan $makan[1][siang]"
?>
```
    
    </li>
</ol>




<h4>7. Null</h4>


<p>NULL adalah Tipe Data yang tidak memuat apapun.
Setiap Variabel yang diset menjadi Tipe Data NULL ini akan
menjadikan Variabel tersebut kosong, seperti dalam penggunaan fungsi <code>unset()</code>.</p>

<p>Cara untuk menset Variabel menjadi NULL adalah dengan memasukan nilai NULL pada variabel yang dimaksud seperti pada
Contoh berikut:</p>

<p>```php
&lt;?php</p>

<pre><code>//Nilai awal $foo adalah 10
$foo = 10
//Nilai foo di ganti NULL
$foo = NULL;
//Penggantian nilai tersebut sama halnya dengan menggunakan unset()
unset($foo);
</code></pre>

<p>?>
```</p>

<h4>8. Resources</h4>


<p>Tipe Data Spesial yang satu ini di khususkan untuk menyimpan resource, sumber atau alamat.
Variabel tersebut hanya dapat diciptakan oleh suatu
fungsi khusus yang mengembalikan nilai berupa resource seperti penggunaan fungsi <code>fopen, opendir, mysql_connect, mysql_query dan semacamnya</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sejarah Perkembangan PHP]]></title>
    <link href="http://ivansa.github.io/tulisan/php/sejarah-perkembangan-php/"/>
    <updated>2014-11-25T14:41:00+07:00</updated>
    <id>http://ivansa.github.io/tulisan/php/sejarah-perkembangan-php</id>
    <content type="html"><![CDATA[<p><b>PHP: Hypertext Preprocessor</b> adalah bahasa skrip yang dapat ditanamkan atau disisipkan ke dalam HTML.
PHP banyak dipakai untuk memrogram situs web dinamis. PHP dapat digunakan untuk membangun sebuah CMS.</p>

<!--more-->




<H4>PHP/FI : Personal Home Page/Forms Interpreter</H4>


<p>Sejarah PHP bermula pada tahun 1994 ketika programmer kelahiran Denmark yang sekarang berdomisili di Canada,
Rasmus Lerdorf membuat sebuah script (kode program) dengan bahasa Perl untuk web pribadinya.
Script ini salah satunya digunakan untuk menampilkan resume pribadi dan mencatat jumlah pengunjung ke website tersebut.</p>

<p>Namun dengan alasan untuk meningkatkan performa,
Rasmus Lerdorf kemudian membuat ulang kode program tersebut dalam bahasa C.
Ia juga mengembangkannya lebih lanjut sehingga memiliki kemampuan untuk bekerja dengan form HTML dan juga database.</p>

<p>Lerdorf menyebut kode program ini sebagai Personal Home Page/Forms Interpreter atau PHP/FI.
Inilah asal mula penamaan PHP digunakan.
PHP/FI dapat digunakan untuk membuat aplikasi web dinamis sederhana.</p>

<p>Lerdorf kemudian merilis kode tersebut ke publik dengan sebutan Personal Home Page Tools (PHP Tools) version 1.0.
Perilisan ini diumumkan pada 8 Juni 1995 di alamat comp.infosystems.www.authoring.cgi, sebuah group diskusi Usenet.</p>

<p>Isi dari pengumuman tersebut:
```
From: <a href="&#x6d;&#x61;&#x69;&#108;&#x74;&#111;&#x3a;&#114;&#x61;&#x73;&#x6d;&#x75;&#115;&#x40;&#105;&#x6f;&#46;&#x6f;&#114;&#x67;">&#x72;&#x61;&#x73;&#109;&#117;&#115;&#x40;&#105;&#x6f;&#46;&#111;&#x72;&#x67;</a> (Rasmus Lerdorf)
Subject: Announce: Personal Home Page Tools (PHP Tools)
Date: 1995/06/08
Message-ID: &lt;3r7pgp$<a href="&#x6d;&#x61;&#x69;&#x6c;&#x74;&#x6f;&#58;&#97;&#97;&#49;&#64;&#x69;&#111;&#110;&#101;&#x77;&#115;&#x2e;&#x69;&#111;&#46;&#x6f;&#114;&#103;">&#97;&#97;&#49;&#x40;&#105;&#x6f;&#110;&#x65;&#119;&#x73;&#x2e;&#x69;&#111;&#x2e;&#111;&#x72;&#x67;</a>>#1/1
organization: none
newsgroups: comp.infosystems.www.authoring.cgi</p>

<p>Announcing the Personal Home Page Tools (PHP Tools) version 1.0.
These tools are a set of small tight cgi binaries written in C.
They perform a number of functions including:</p>

<p>. Logging accesses to your pages in your own private log files
. Real-time viewing of log information
. Providing a nice interface to this log information
. Displaying last access information right on your pages
. Full daily and total access counters
. Banning access to users based on their domain
. Password protecting pages based on users' domains
. Tracking accesses <strong> based on users' e-mail addresses </strong>
. Tracking referring URL&rsquo;s &ndash; HTTP_REFERER support
. Performing server-side includes without needing server support for it
. Ability to not log accesses from certain domains (ie. your own)
. Easily create and display forms
. Ability to use form information in following documents</p>

<p>Here is what you don&rsquo;t need to use these tools:
. You do not need root access &ndash; install in your ~/public_html dir
. You do not need server-side includes enabled in your server
. You do not need access to Perl or Tcl or any other script interpreter
. You do not need access to the httpd log files</p>

<p>The only requirement for these tools to work is that you have
the ability to execute your own cgi programs. Ask your system
administrator if you are not sure what this means.</p>

<p>The tools also allow you to implement a guestbook or any other
form that needs to write information and display it to users
later in about 2 minutes.</p>

<p>The tools are in the public domain distributed under the GNU
Public License. Yes, that means they are free!
For a complete demonstration of these tools, point your browser
at: <a href="http://www.io.org/~rasmus">http://www.io.org/~rasmus</a></p>

<p>&mdash;
Rasmus Lerdorf
<a href="&#109;&#97;&#x69;&#108;&#116;&#x6f;&#x3a;&#114;&#97;&#x73;&#109;&#x75;&#x73;&#x40;&#105;&#x6f;&#x2e;&#x6f;&#114;&#103;">&#x72;&#x61;&#115;&#x6d;&#117;&#115;&#x40;&#105;&#111;&#46;&#x6f;&#114;&#x67;</a></p>

<p><a href="http://www.io.org/~rasmus">http://www.io.org/~rasmus</a>
```
Alamat website yang tertera di atas sudah tidak dipakai lagi,
namun setidaknya dari pengumuman ini kita dapat mengetahui bahwa kebutuhan programmer saat itu
salah satunya adalah mencari cara untuk membuat halaman yang dapat diproteksi dengan password,
kemudahan dalam membuat form, dan kemampuan mengakses data dari halaman lain.</p>

<p>Pengumuman itu juga mencerminkan bahwa PHP pada awalnya adalah sebuah framework bahasa C
yang memiliki banyak fungsi dalam mengembangkan web,
bukan sebuah bahasa pemograman utuh seperti yang kita kenal sekarang.</p>

<H4>PHP/FI : Personal Home Page/Forms Interpreter 2</H4>


<p>Seiring dengan pengembangan dan penambahan fitur web pada saat itu,
pada April 1996, Rasmus Lerdorf mengumumkan PHP/FI versi 2.0.
PHP versi 2 ini dirancang Lerdorf pada saat mengerjakan sebuah proyek di University of Toronto
yang membutuhkan pengolahan data dan tampilan web yang rumit.
PHP/FI versi 1 sebenarnya sudah mencukupi,
namun performa yang dihasilkan dirasakan belum cukup,
sehingga butuh penambahan fitur lanjutan.</p>

<p>Berikut adalah email dari Lerdorf yang ditujukan kepada group diskusi Usenet pada tahun 1996.
```
From: <a href="&#x6d;&#x61;&#x69;&#108;&#116;&#x6f;&#58;&#x72;&#97;&#x73;&#109;&#x75;&#x73;&#x40;&#109;&#97;&#x64;&#104;&#97;&#x75;&#115;&#x2e;&#x75;&#116;&#99;&#x73;&#46;&#x75;&#x74;&#x6f;&#114;&#111;&#110;&#x74;&#111;&#46;&#x63;&#97;">&#x72;&#x61;&#x73;&#x6d;&#117;&#x73;&#64;&#109;&#x61;&#100;&#104;&#x61;&#x75;&#115;&#46;&#117;&#x74;&#x63;&#115;&#x2e;&#117;&#x74;&#111;&#114;&#x6f;&#110;&#x74;&#x6f;&#46;&#99;&#x61;</a> (Rasmus Lerdorf)
Subject: ANNOUNCE: PHP/FI Server-side HTML-Embedded Scripting Language
Date: 1996/04/16
Newsgroups: comp.infosystems.www.authoring.cgi</p>

<p>PHP/FI is a server-side HTML embedded scripting language. It has built-in
access logging and access restriction features and also support for
embedded SQL queries to mSQL and/or Postgres95 backend databases.</p>

<p>It is most likely the fastest and simplest tool available for creating
database-enabled web sites.
It will work with any UNIX-based web server on every UNIX flavour out
there. The package is completely free of charge for all uses including
commercial.</p>

<p>Feature List:
. Access Logging
Log every hit to your pages in either a dbm or an mSQL database.
Having hit information in a database format makes later analysis easier.
. Access Restriction
Password protect your pages, or restrict access based on the refering URL
plus many other options.
. mSQL Support
Embed mSQL queries right in your HTML source files
. Postgres95 Support
Embed Postgres95 queries right in your HTML source files
. DBM Support
DB, DBM, NDBM and GDBM are all supported
. RFC-1867 File Upload Support
Create file upload forms
. Variables, Arrays, Associative Arrays
. User-Defined Functions with static variables + recursion
. Conditionals and While loops
Writing conditional dynamic web pages could not be easier than with
the PHP/FI conditionals and looping support
. Extended Regular Expressions
Powerful string manipulation support through full regexp support
. Raw HTTP Header Control
Lets you send customized HTTP headers to the browser for advanced
features such as cookies.
. Dynamic GIF Image Creation
Thomas Boutell&rsquo;s GD library is supported through an easy-to-use set of
tags.</p>

<h2>It can be downloaded from the File Archive at: &lt;URL:<a href="http://www.vex.net/php">http://www.vex.net/php</a>></h2>

<p>Rasmus Lerdorf
<a href="&#x6d;&#x61;&#105;&#108;&#x74;&#x6f;&#x3a;&#x72;&#x61;&#x73;&#x6d;&#117;&#115;&#64;&#x76;&#101;&#x78;&#46;&#110;&#101;&#116;">&#x72;&#x61;&#115;&#109;&#x75;&#x73;&#x40;&#118;&#101;&#120;&#x2e;&#x6e;&#x65;&#116;</a>
```</p>

<p>Didalam email tersebut, dijelaskan juga penambahan fitur-fitur baru di dalam PHP/FI versi 2.
Dalam pengumuman ini jugalah pertama kalinya kata “scripting language” (bahasa script) digunakan dalam PHP.</p>

<p>Alasan utama untuk perilisan versi kedua ini dikarenakan tuntutan
programmer web yang saat itu menginginkan lebih dari sekedar kumpulan fungsi-fungsi,
namun juga membutuhkan fitur logika seperti “if” dan “else”.</p>

<H4>PHP: Hypertext Preprocessor 3</H4>


<p>Evolusi PHP berikutnya terjadi pada pertengahan tahun 1997,
PHP versi 2 telah menarik banyak perhatian programmer,
namun bahasa ini memiliki masalah dengan kestabilan yang kurang bisa diandalkan.
Hal ini lebih dikarenakan Lerdorf hanya bekerja sendiri untuk mengembangkan PHP.</p>

<p>Pada saat itulah Zeev Suraski dan Andi Gutmans,
2 orang programmer asal Israel ikut mengambil bagian dan membuat ulang parsing engine yang menjadi dasar dari PHP agar lebih stabil.</p>

<p>Dengan dukungan dari banyak programmer lainnya,
Proyek PHP secara perlahan beralih dari proyek satu orang menjadi proyek massal yang lebih akrab kita kenal sebagai open-source project.
PHP selanjutnya dikembangkan oleh The PHP Group yang merupakan kumpulan banyak programmer dari seluruh dunia.</p>

<p>PHP versi 3 resmi dirilis pada Juni 1998:
```
June 6, 1998 &mdash; The PHP Development Team announced the release of PHP 3.0,
the latest release of the server-side scripting solution already in use on
over 70,000 World Wide Web sites.</p>

<p>This all-new version of the popular scripting language includes support
for all major operating systems (Windows 95/NT, most versions of Unix,
and Macintosh) and web servers (including Apache, Netscape servers,
WebSite Pro, and Microsoft Internet Information Server).
PHP 3.0 also supports a wide range of databases, including Oracle, Sybase,
Solid, MySQ, mSQL, and PostgreSQL, as well as ODBC data sources.</p>

<p>New features include persistent database connections, support for the
SNMP and IMAP protocols, and a revamped C API for extending the language
with new features.</p>

<p>&ldquo;PHP is a very programmer-friendly scripting language suitable for
people with little or no programming experience as well as the
seasoned web developer who needs to get things done quickly. The
best thing about PHP is that you get results quickly,&rdquo;
said Rasmus Lerdorf, one of the developers of the language.</p>

<p>&ldquo;Version 3 provides a much more powerful, reliable, and efficient
implementation of the language, while maintaining the ease of use and
rapid development that were the key to PHP&rsquo;s success in the past,&rdquo;
added Andi Gutmans, one of the implementors of the new language core.</p>

<p>&ldquo;At Circle Net we have found PHP to be the most robust platform for
rapid web-based application development available today,&rdquo; said Troy
Cobb, Chief Technology Officer at Circle Net, Inc. &ldquo;Our use of PHP
has cut our development time in half, and more than doubled our client
satisfaction. PHP has enabled us to provide database-driven dynamic
solutions which perform at phenomenal speeds.&rdquo;</p>

<p>PHP 3.0 is available for free download in source form and binaries for
several platforms at <a href="http://www.php.net/.">http://www.php.net/.</a></p>

<p>The PHP Development Team is an international group of programmers who
lead the open development of PHP and related projects.
For more information, the PHP Development Team can be contacted at
<a href="&#x6d;&#97;&#x69;&#108;&#x74;&#111;&#58;&#99;&#111;&#114;&#x65;&#64;&#x70;&#x68;&#x70;&#x2e;&#x6e;&#101;&#116;&#x2e;">&#x63;&#111;&#114;&#101;&#64;&#112;&#x68;&#x70;&#46;&#110;&#x65;&#x74;&#46;</a>
```</p>

<p>Perilisan PHP versi 3 juga ditandai dengan penamaan singkatan PHP baru yang sebelumnya PHP/FI:
Personal Home Page Tools, menjadi PHP: Hypertext Preprocessor.
Kepanjangan PHP sebagai PHP: Hypertext Preprocessor disebut juga sebagai kepanjangan rekursrif,
sebuah istilah dalam pemograman dimana suatu fungsi memanggil dirinya sendiri.
Jadi, sejak PHP versi 3, PHP adalah singkatan dari PHP: Hypertext Preprocessor.</p>

<p>Setelah perilisan PHP 3.0, PHP semakin populer digunakan di seluruh dunia.
Dan sejak saat itu, penggunaan PHP sebagai bahasa pemograman web menjadi sebuah standar bagi programmer.</p>

<H4>PHP: Hypertext Preprocessor 4</H4>


<p>Segera setelahnya, Zeev Suraski dan Andi Gutmans juga berbagai
programmer di seluruh dunia mengembangkan PHP lebih jauh lagi dengan memperkenalkan banyak fitur lanjutan,
seperti layer abstraksi antara PHP dengan web server, menambahkan mekanisme thread-safety, dan two-stage parsing.
Parsing baru ini dikembangkan oleh Zeev dan Andi, dan dinamakan Zend engine. Akhirnya pada 22 May 2000 diluncurkan PHP 4.0</p>

<p>PHP versi 4 juga menyertakan fitur pemograman objek / Object Oriented Programming, walaupun belum sempurna.
<img src="/images/blog/tulisan/sejarah-php/pembuat-php.jpg" style="border:1px solid grey;margin-top:0.8em"></p>

<H4>PHP: Hypertext Preprocessor 5</H4>


<p>Versi PHP terakhir hingga saat ini, yaitu PHP 5.0 diluncurkan pada 13 Juli 2004.
PHP 5 ini telah mendukung penuh pemograman object dan peningkatan performa melalui Zend engine versi 2.</p>

<p>Beberapa penambahan fitur meliputi PDO (PHP Data Objects) untuk pengaksesan database, closures, trait, dan namespaces.</p>

<p>Hingga artikel ini di-update pada September 2014, versi stabil terakhir dari PHP adalah versi 5.6.0.</p>

<H4>PHP: Hypertext Preprocessor 6</H4>


<p>PHP versi 6 juga telah lama dikembangkan, bahkan sejak tahun 2005.
Fokus pengembangan PHP 6 terutama dalam mendukung Unicode,
namun dikarenakan beberapa alasan seperti kurangnya programmer,
dan performa yang tidak memuaskan,
pengembangan PHP 6 dihentikan dan fitur yang ada dimasukkan kedalam PHP 5.</p>

<H4>PHP: Hypertext Preprocessor 7</H4>


<p>Pada tahun 2014, sebuah proyek lanjutan PHP mulai mengemuka, yakni PHP 7.
Kalangan programmer sedikit bingung dengan penamaan versi PHP yang akan dirilis ini,
apakah akan menyebutnya sebagai PHP 6 atau PHP 7.
Walaupun PHP versi 6 telah resmi ditinggalkan,
namun banyak artikel dan buku yang ditulis mengenai PHP 6.
Setelah mengambil voting, nama PHP versi 7 akhirnya menjadi keputusan final.</p>

<p>PHP 7 berkembang dari proyek experimen yang dinamakan PHPNG (PHP Next Generation).
Proyek PHPNG ini bertujuan untuk menyusun ulang kode PHP untuk meningkatkan performa.
Pada Juli 2014, sebuah percobaan mendapati hasil bahwa PHPNG mengalami peningkatan performa hampir 100% dari versi PHP sebelumnya.</p>

<p>Masih belum jelas kapan PHP 7 akan dirilis,
namun melihat perkembangan yang terus dilakukan,
masa depan PHP akan tetap menjadi salah satu bahasa pemograman paling populer di dunia.</p>

<p>Untuk mengikuti perkembangan PHP, anda bisa membacanya di halaman web resi PHP : www.php.net.</p>

<p><b>Sumber : </b></p>

<blockquote><p><a href="http://www.duniailkom.com/sejarah-php-dan-perkembangan-versi-php/">www.duniailkom.com</a> <br />
<a href="http://id.wikipedia.org/wiki/PHP">id.wikipedia.org</a><br />
<a href="http://www.php.net">www.php.net</a><br />
<a href="#">Programming PHP, Third Edition – O’Reilly Media</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Membuat Refresh Page PHP Sederhana]]></title>
    <link href="http://ivansa.github.io/php/refresh-php/"/>
    <updated>2014-02-15T08:41:00+07:00</updated>
    <id>http://ivansa.github.io/php/refresh-php</id>
    <content type="html"><![CDATA[<p>Membuat Page refresh otomatis dalam beberapa detik sekali, menggunakan fungsi meta pada html.</p>

<!--more-->


<p>```php
&lt;?php
$page = $_SERVER[&lsquo;PHP_SELF&rsquo;];
$sec = &ldquo;10&rdquo;;
?>
<html></p>

<pre><code>&lt;head&gt;
&lt;meta http-equiv="refresh" content="&lt;?php echo $sec?&gt;;URL='&lt;?php echo $page?&gt;'"&gt;
&lt;/head&gt;
&lt;body&gt; 
&lt;?php
    echo "Watch the page reload itself in 10 second!";
?&gt;
&lt;/body&gt;
</code></pre>

<p></html>
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android With Webserver PHP]]></title>
    <link href="http://ivansa.github.io/android/php/android-with-webserver-php/"/>
    <updated>2014-02-14T08:41:00+07:00</updated>
    <id>http://ivansa.github.io/android/php/android-with-webserver-php</id>
    <content type="html"><![CDATA[<p>Membuat aplikasi android dengan webserver menggunakan php.</p>

<!--more-->


<h4>1 Buat Database test_android.</h4>

<h4>2 Buat Table users(username, fullname).</h4>

<h4>3 Buat file php :</h4>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (input_data.php)</span> <a href='/downloads/code/android/webserver_php/input_data.php'>download</a></figcaption>
 <div class="highlight"><table><tr><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="c1">//http://localhost:8080/sample1/webservice2.php?json={%22UserName%22:1,%22FullName%22:2}</span>
</span><span class='line'><span class="c1">//$json=$_GET [&#39;json&#39;];</span>
</span><span class='line'><span class="nv">$json</span> <span class="o">=</span> <span class="nb">file_get_contents</span><span class="p">(</span><span class="s1">&#39;php://input&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nv">$obj</span> <span class="o">=</span> <span class="nb">json_decode</span><span class="p">(</span><span class="nv">$json</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//echo $json;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">//Save</span>
</span><span class='line'><span class="nv">$con</span> <span class="o">=</span> <span class="nb">mysql_connect</span><span class="p">(</span><span class="s1">&#39;localhost&#39;</span><span class="p">,</span><span class="s1">&#39;root&#39;</span><span class="p">,</span><span class="s1">&#39;admin&#39;</span><span class="p">)</span> <span class="k">or</span> <span class="k">die</span><span class="p">(</span><span class="s1">&#39;Cannot connect to the DB&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nb">mysql_select_db</span><span class="p">(</span><span class="s1">&#39;test_android&#39;</span><span class="p">,</span><span class="nv">$con</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* grab the posts from the db */</span>
</span><span class='line'>  <span class="c1">//$query = &quot;SELECT post_title, guid FROM wp_posts WHERE post_author = $user_id AND post_status = &#39;publish&#39; ORDER BY ID DESC LIMIT $number_of_posts&quot;;</span>
</span><span class='line'><span class="nb">mysql_query</span><span class="p">(</span><span class="s2">&quot;INSERT INTO users (username, fullname)</span>
</span><span class='line'><span class="s2">VALUES (&#39;&quot;</span><span class="o">.</span><span class="nv">$obj</span><span class="o">-&gt;</span><span class="p">{</span><span class="s1">&#39;username&#39;</span><span class="p">}</span><span class="o">.</span><span class="s2">&quot;&#39;, &#39;&quot;</span><span class="o">.</span><span class="nv">$obj</span><span class="o">-&gt;</span><span class="p">{</span><span class="s1">&#39;fullname&#39;</span><span class="p">}</span><span class="o">.</span><span class="s2">&quot;&#39;)&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nb">mysql_close</span><span class="p">(</span><span class="nv">$con</span><span class="p">);</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>  <span class="c1">//$posts = array($json);</span>
</span><span class='line'>  <span class="nv">$posts</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">header</span><span class="p">(</span><span class="s1">&#39;Content-type: application/json&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">echo</span> <span class="nb">json_encode</span><span class="p">(</span><span class="k">array</span><span class="p">(</span><span class="s1">&#39;posts&#39;</span><span class="o">=&gt;</span><span class="nv">$posts</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (select_table.php)</span> <a href='/downloads/code/android/webserver_php/select_table.php'>download</a></figcaption>
 <div class="highlight"><table><tr><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="cm">/* require the user as the parameter */</span>
</span><span class='line'><span class="c1">//http://localhost:8080/sample1/webservice1.php?user=1</span>
</span><span class='line'><span class="k">if</span><span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;user&#39;</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="nb">intval</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;user&#39;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* soak in the passed variable or set our own */</span>
</span><span class='line'>  <span class="nv">$number_of_posts</span> <span class="o">=</span> <span class="nb">isset</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;num&#39;</span><span class="p">])</span> <span class="o">?</span> <span class="nb">intval</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;num&#39;</span><span class="p">])</span> <span class="o">:</span> <span class="mi">10</span><span class="p">;</span> <span class="c1">//10 is the default</span>
</span><span class='line'>  <span class="nv">$format</span> <span class="o">=</span> <span class="nx">strtolower</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s1">&#39;format&#39;</span><span class="p">])</span> <span class="o">==</span> <span class="s1">&#39;json&#39;</span> <span class="o">?</span> <span class="s1">&#39;json&#39;</span> <span class="o">:</span> <span class="s1">&#39;xml&#39;</span><span class="p">;</span> <span class="c1">//xml is the default</span>
</span><span class='line'>  <span class="c1">//$user_id = intval($_GET[&#39;user&#39;]); //no default</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* connect to the db */</span>
</span><span class='line'>  <span class="nv">$link</span> <span class="o">=</span> <span class="nb">mysql_connect</span><span class="p">(</span><span class="s1">&#39;localhost&#39;</span><span class="p">,</span><span class="s1">&#39;root&#39;</span><span class="p">,</span><span class="s1">&#39;admin&#39;</span><span class="p">)</span> <span class="k">or</span> <span class="k">die</span><span class="p">(</span><span class="s1">&#39;Cannot connect to the DB&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nb">mysql_select_db</span><span class="p">(</span><span class="s1">&#39;test_android&#39;</span><span class="p">,</span><span class="nv">$link</span><span class="p">)</span> <span class="k">or</span> <span class="k">die</span><span class="p">(</span><span class="s1">&#39;Cannot select the DB&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* grab the posts from the db */</span>
</span><span class='line'>  <span class="c1">//$query = &quot;SELECT post_title, guid FROM wp_posts WHERE post_author = $user_id AND post_status = &#39;publish&#39; ORDER BY ID DESC LIMIT $number_of_posts&quot;;</span>
</span><span class='line'>  <span class="nv">$query</span> <span class="o">=</span> <span class="s2">&quot;SELECT * FROM users;&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$result</span> <span class="o">=</span> <span class="nb">mysql_query</span><span class="p">(</span><span class="nv">$query</span><span class="p">,</span><span class="nv">$link</span><span class="p">)</span> <span class="k">or</span> <span class="k">die</span><span class="p">(</span><span class="s1">&#39;Errant query:  &#39;</span><span class="o">.</span><span class="nv">$query</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* create one master array of the records */</span>
</span><span class='line'>  <span class="nv">$posts</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="nb">mysql_num_rows</span><span class="p">(</span><span class="nv">$result</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">while</span><span class="p">(</span><span class="nv">$post</span> <span class="o">=</span> <span class="nb">mysql_fetch_assoc</span><span class="p">(</span><span class="nv">$result</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>      <span class="nv">$posts</span><span class="p">[]</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;post&#39;</span><span class="o">=&gt;</span><span class="nv">$post</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* output in necessary format */</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="nv">$format</span> <span class="o">==</span> <span class="s1">&#39;json&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">header</span><span class="p">(</span><span class="s1">&#39;Content-type: application/json&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">echo</span> <span class="nb">json_encode</span><span class="p">(</span><span class="k">array</span><span class="p">(</span><span class="s1">&#39;posts&#39;</span><span class="o">=&gt;</span><span class="nv">$posts</span><span class="p">));</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">header</span><span class="p">(</span><span class="s1">&#39;Content-type: text/xml&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">echo</span> <span class="s1">&#39;&lt;posts&gt;&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">foreach</span><span class="p">(</span><span class="nv">$posts</span> <span class="k">as</span> <span class="nv">$index</span> <span class="o">=&gt;</span> <span class="nv">$post</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="nb">is_array</span><span class="p">(</span><span class="nv">$post</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">foreach</span><span class="p">(</span><span class="nv">$post</span> <span class="k">as</span> <span class="nv">$key</span> <span class="o">=&gt;</span> <span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">echo</span> <span class="s1">&#39;&lt;&#39;</span><span class="p">,</span><span class="nv">$key</span><span class="p">,</span><span class="s1">&#39;&gt;&#39;</span><span class="p">;</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span><span class="nb">is_array</span><span class="p">(</span><span class="nv">$value</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">foreach</span><span class="p">(</span><span class="nv">$value</span> <span class="k">as</span> <span class="nv">$tag</span> <span class="o">=&gt;</span> <span class="nv">$val</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="k">echo</span> <span class="s1">&#39;&lt;&#39;</span><span class="p">,</span><span class="nv">$tag</span><span class="p">,</span><span class="s1">&#39;&gt;&#39;</span><span class="p">,</span><span class="nb">htmlentities</span><span class="p">(</span><span class="nv">$val</span><span class="p">),</span><span class="s1">&#39;&lt;/&#39;</span><span class="p">,</span><span class="nv">$tag</span><span class="p">,</span><span class="s1">&#39;&gt;&#39;</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="k">echo</span> <span class="s1">&#39;&lt;/&#39;</span><span class="p">,</span><span class="nv">$key</span><span class="p">,</span><span class="s1">&#39;&gt;&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">echo</span> <span class="s1">&#39;&lt;/posts&gt;&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* disconnect from the db */</span>
</span><span class='line'>  <span class="o">@</span><span class="nb">mysql_close</span><span class="p">(</span><span class="nv">$link</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'> <span class="cp">?&gt;</span><span class="x"> </span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4>4 Buat android project.</h4>

<h4>5 MainActivity.java.</h4>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (MainActivity.java)</span> <a href='/downloads/code/android/webserver_php/MainActivity.java'>download</a></figcaption>
 <div class="highlight"><table><tr><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">ivans</span><span class="o">.</span><span class="na">php</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.InputStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.HttpEntity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.HttpResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.client.ClientProtocolException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.client.HttpClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.client.ResponseHandler</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.client.entity.UrlEncodedFormEntity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.client.methods.HttpPost</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.entity.ByteArrayEntity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.impl.client.BasicResponseHandler</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.NameValuePair</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.impl.client.DefaultHttpClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.message.BasicNameValuePair</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.params.BasicHttpParams</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.params.HttpConnectionParams</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.params.HttpParams</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.json.JSONArray</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.json.JSONObject</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.app.Activity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.Bundle</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.StrictMode</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.util.Log</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Toast</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">Activity</span> <span class="o">{</span>
</span><span class='line'>	<span class="cm">/** Called when the activity is first created. */</span>
</span><span class='line'>	<span class="kt">int</span> <span class="n">TIMEOUT_MILLISEC</span> <span class="o">=</span> <span class="mi">10000</span><span class="o">;</span> <span class="c1">// = 10 seconds</span>
</span><span class='line'>
</span><span class='line'>	<span class="nd">@Override</span>
</span><span class='line'>	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>		<span class="k">try</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>			<span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>			<span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>			
</span><span class='line'>			<span class="n">StrictMode</span><span class="o">.</span><span class="na">ThreadPolicy</span> <span class="n">policy</span> <span class="o">=</span> <span class="k">new</span>
</span><span class='line'>			<span class="n">StrictMode</span><span class="o">.</span><span class="na">ThreadPolicy</span><span class="o">.</span><span class="na">Builder</span><span class="o">().</span><span class="na">permitAll</span><span class="o">().</span><span class="na">build</span><span class="o">();</span>
</span><span class='line'>			<span class="n">StrictMode</span><span class="o">.</span><span class="na">setThreadPolicy</span><span class="o">(</span><span class="n">policy</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Throwable</span> <span class="n">t</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>			<span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">&quot;Request failed: &quot;</span> <span class="o">+</span> <span class="n">t</span><span class="o">.</span><span class="na">toString</span><span class="o">(),</span>
</span><span class='line'>					<span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>		<span class="o">}</span>
</span><span class='line'>	<span class="o">}</span>
</span><span class='line'>
</span><span class='line'>	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">clickbuttonSent</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>		<span class="k">try</span> <span class="o">{</span>
</span><span class='line'>			<span class="n">JSONObject</span> <span class="n">json</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JSONObject</span><span class="o">();</span>
</span><span class='line'>			<span class="n">json</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;username&quot;</span><span class="o">,</span> <span class="s">&quot;ivans&quot;</span><span class="o">);</span>
</span><span class='line'>			<span class="n">json</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;fullname&quot;</span><span class="o">,</span> <span class="s">&quot;ivans ganteng&quot;</span><span class="o">);</span>
</span><span class='line'>			<span class="n">HttpParams</span> <span class="n">httpParams</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BasicHttpParams</span><span class="o">();</span>
</span><span class='line'>			<span class="n">HttpConnectionParams</span><span class="o">.</span><span class="na">setConnectionTimeout</span><span class="o">(</span><span class="n">httpParams</span><span class="o">,</span>
</span><span class='line'>					<span class="n">TIMEOUT_MILLISEC</span><span class="o">);</span>
</span><span class='line'>			<span class="n">HttpConnectionParams</span><span class="o">.</span><span class="na">setSoTimeout</span><span class="o">(</span><span class="n">httpParams</span><span class="o">,</span> <span class="n">TIMEOUT_MILLISEC</span><span class="o">);</span>
</span><span class='line'>			<span class="n">HttpClient</span> <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultHttpClient</span><span class="o">(</span><span class="n">httpParams</span><span class="o">);</span>
</span><span class='line'>			<span class="c1">//</span>
</span><span class='line'>			<span class="c1">//String url = &quot;http://10.0.2.2:8080/sample1/webservice2.php?json={\&quot;UserName\&quot;:1,\&quot;FullName\&quot;:2}&quot;;</span>
</span><span class='line'>			<span class="n">String</span> <span class="n">url</span> <span class="o">=</span> <span class="s">&quot;http://192.168.0.103/webservice2.php&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>			<span class="n">HttpPost</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HttpPost</span><span class="o">(</span><span class="n">url</span><span class="o">);</span>
</span><span class='line'>			<span class="n">request</span><span class="o">.</span><span class="na">setEntity</span><span class="o">(</span><span class="k">new</span> <span class="n">ByteArrayEntity</span><span class="o">(</span><span class="n">json</span><span class="o">.</span><span class="na">toString</span><span class="o">().</span><span class="na">getBytes</span><span class="o">(</span>
</span><span class='line'>					<span class="s">&quot;UTF8&quot;</span><span class="o">)));</span>
</span><span class='line'>			<span class="n">request</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;json&quot;</span><span class="o">,</span> <span class="n">json</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</span><span class='line'>			<span class="n">HttpResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">request</span><span class="o">);</span>
</span><span class='line'>			<span class="n">HttpEntity</span> <span class="n">entity</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getEntity</span><span class="o">();</span>
</span><span class='line'>			<span class="c1">// If the response does not enclose an entity, there is no need</span>
</span><span class='line'>			<span class="k">if</span> <span class="o">(</span><span class="n">entity</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>				<span class="n">InputStream</span> <span class="n">instream</span> <span class="o">=</span> <span class="n">entity</span><span class="o">.</span><span class="na">getContent</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>				<span class="n">String</span> <span class="n">result</span> <span class="o">=</span> <span class="n">StreamConverter</span><span class="o">.</span><span class="na">convertStreamToString</span><span class="o">(</span><span class="n">instream</span><span class="o">);</span>
</span><span class='line'>				<span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="s">&quot;Read from server&quot;</span><span class="o">,</span> <span class="n">result</span><span class="o">);</span>
</span><span class='line'>				<span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="k">this</span><span class="o">,</span>  <span class="n">result</span><span class="o">,</span>
</span><span class='line'>						<span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>			<span class="o">}</span>
</span><span class='line'>		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Throwable</span> <span class="n">t</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>			<span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">&quot;Request failed: &quot;</span> <span class="o">+</span> <span class="n">t</span><span class="o">.</span><span class="na">toString</span><span class="o">(),</span>
</span><span class='line'>					<span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>		<span class="o">}</span>
</span><span class='line'>	<span class="o">}</span>
</span><span class='line'>
</span><span class='line'>	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">clickbuttonRecieve</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>		<span class="k">try</span> <span class="o">{</span>
</span><span class='line'>			<span class="c1">// http://androidarabia.net/quran4android/phpserver/connecttoserver.php</span>
</span><span class='line'>
</span><span class='line'>			<span class="c1">// Log.i(getClass().getSimpleName(), &quot;send  task - start&quot;);</span>
</span><span class='line'>			<span class="n">HttpParams</span> <span class="n">httpParams</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BasicHttpParams</span><span class="o">();</span>
</span><span class='line'>			<span class="n">HttpConnectionParams</span><span class="o">.</span><span class="na">setConnectionTimeout</span><span class="o">(</span><span class="n">httpParams</span><span class="o">,</span>
</span><span class='line'>					<span class="n">TIMEOUT_MILLISEC</span><span class="o">);</span>
</span><span class='line'>			<span class="n">HttpConnectionParams</span><span class="o">.</span><span class="na">setSoTimeout</span><span class="o">(</span><span class="n">httpParams</span><span class="o">,</span> <span class="n">TIMEOUT_MILLISEC</span><span class="o">);</span>
</span><span class='line'>			<span class="c1">//</span>
</span><span class='line'>			<span class="n">HttpParams</span> <span class="n">p</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BasicHttpParams</span><span class="o">();</span>
</span><span class='line'>			<span class="c1">// p.setParameter(&quot;name&quot;, pvo.getName());</span>
</span><span class='line'>
</span><span class='line'>			<span class="c1">// Instantiate an HttpClient</span>
</span><span class='line'>			<span class="n">HttpClient</span> <span class="n">httpclient</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultHttpClient</span><span class="o">(</span><span class="n">p</span><span class="o">);</span>
</span><span class='line'>			<span class="n">String</span> <span class="n">url</span> <span class="o">=</span> <span class="s">&quot;http://192.168.0.103/webservice1.php?user=1&amp;format=json&quot;</span><span class="o">;</span>
</span><span class='line'>			<span class="n">HttpPost</span> <span class="n">httppost</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HttpPost</span><span class="o">(</span><span class="n">url</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>			<span class="c1">// Instantiate a GET HTTP method</span>
</span><span class='line'>			<span class="k">try</span> <span class="o">{</span>
</span><span class='line'>				<span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">getClass</span><span class="o">().</span><span class="na">getSimpleName</span><span class="o">(),</span> <span class="s">&quot;send  task - start&quot;</span><span class="o">);</span>
</span><span class='line'>				
</span><span class='line'>				<span class="c1">//List&lt;NameValuePair&gt; nameValuePairs = new ArrayList&lt;NameValuePair&gt;(2);</span>
</span><span class='line'>				<span class="c1">//nameValuePairs.add(new BasicNameValuePair(&quot;user&quot;, &quot;1&quot;));</span>
</span><span class='line'>				<span class="c1">//httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));</span>
</span><span class='line'>				
</span><span class='line'>				<span class="n">ResponseHandler</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">responseHandler</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BasicResponseHandler</span><span class="o">();</span>
</span><span class='line'>				<span class="n">String</span> <span class="n">responseBody</span> <span class="o">=</span> <span class="n">httpclient</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">httppost</span><span class="o">,</span>
</span><span class='line'>						<span class="n">responseHandler</span><span class="o">);</span>
</span><span class='line'>				<span class="c1">// Parse</span>
</span><span class='line'>				<span class="n">JSONObject</span> <span class="n">json</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JSONObject</span><span class="o">(</span><span class="n">responseBody</span><span class="o">);</span>
</span><span class='line'>				<span class="n">JSONArray</span> <span class="n">jArray</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="na">getJSONArray</span><span class="o">(</span><span class="s">&quot;posts&quot;</span><span class="o">);</span>
</span><span class='line'>				<span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;&gt;</span> <span class="n">mylist</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;&gt;();</span>
</span><span class='line'>
</span><span class='line'>				<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">jArray</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>					<span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">map</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;();</span>
</span><span class='line'>					<span class="n">JSONObject</span> <span class="n">e</span> <span class="o">=</span> <span class="n">jArray</span><span class="o">.</span><span class="na">getJSONObject</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>					<span class="n">String</span> <span class="n">s</span> <span class="o">=</span> <span class="n">e</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">&quot;post&quot;</span><span class="o">);</span>
</span><span class='line'>					<span class="n">JSONObject</span> <span class="n">jObject</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JSONObject</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>					<span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;idusers&quot;</span><span class="o">,</span> <span class="n">jObject</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">&quot;idusers&quot;</span><span class="o">));</span>
</span><span class='line'>					<span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;username&quot;</span><span class="o">,</span> <span class="n">jObject</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">&quot;username&quot;</span><span class="o">));</span>
</span><span class='line'>					<span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;fullname&quot;</span><span class="o">,</span> <span class="n">jObject</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">&quot;fullname&quot;</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>					<span class="n">mylist</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">map</span><span class="o">);</span>
</span><span class='line'>				<span class="o">}</span>
</span><span class='line'>				<span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">responseBody</span><span class="o">,</span> <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ClientProtocolException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>				<span class="c1">// TODO Auto-generated catch block</span>
</span><span class='line'>				<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>				<span class="c1">// TODO Auto-generated catch block</span>
</span><span class='line'>				<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>			<span class="o">}</span>
</span><span class='line'>			<span class="c1">// Log.i(getClass().getSimpleName(), &quot;send  task - end&quot;);</span>
</span><span class='line'>
</span><span class='line'>		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Throwable</span> <span class="n">t</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>			<span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">&quot;Request failed: &quot;</span> <span class="o">+</span> <span class="n">t</span><span class="o">.</span><span class="na">toString</span><span class="o">(),</span>
</span><span class='line'>					<span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
</span><span class='line'>		<span class="o">}</span>
</span><span class='line'>
</span><span class='line'>	<span class="o">}</span>
</span><span class='line'>
</span><span class='line'>	<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Data</span> <span class="o">{</span>
</span><span class='line'>		<span class="c1">// private List&lt;User&gt; users;</span>
</span><span class='line'>		<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">User</span><span class="o">&gt;</span> <span class="n">users</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>		<span class="c1">// +getters/setters</span>
</span><span class='line'>	<span class="o">}</span>
</span><span class='line'>
</span><span class='line'>	<span class="kd">static</span> <span class="kd">class</span> <span class="nc">User</span> <span class="o">{</span>
</span><span class='line'>		<span class="n">String</span> <span class="n">idusers</span><span class="o">;</span>
</span><span class='line'>		<span class="n">String</span> <span class="n">username</span><span class="o">;</span>
</span><span class='line'>		<span class="n">String</span> <span class="n">fullname</span><span class="o">;</span>
</span><span class='line'>		
</span><span class='line'>		<span class="kd">public</span> <span class="n">String</span> <span class="nf">getIdusers</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>			<span class="k">return</span> <span class="n">idusers</span><span class="o">;</span>
</span><span class='line'>		<span class="o">}</span>
</span><span class='line'>		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setIdusers</span><span class="o">(</span><span class="n">String</span> <span class="n">idusers</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>			<span class="k">this</span><span class="o">.</span><span class="na">idusers</span> <span class="o">=</span> <span class="n">idusers</span><span class="o">;</span>
</span><span class='line'>		<span class="o">}</span>
</span><span class='line'>		<span class="kd">public</span> <span class="n">String</span> <span class="nf">getUsername</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>			<span class="k">return</span> <span class="n">username</span><span class="o">;</span>
</span><span class='line'>		<span class="o">}</span>
</span><span class='line'>		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setUsername</span><span class="o">(</span><span class="n">String</span> <span class="n">username</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>			<span class="k">this</span><span class="o">.</span><span class="na">username</span> <span class="o">=</span> <span class="n">username</span><span class="o">;</span>
</span><span class='line'>		<span class="o">}</span>
</span><span class='line'>		<span class="kd">public</span> <span class="n">String</span> <span class="nf">getFullname</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>			<span class="k">return</span> <span class="n">fullname</span><span class="o">;</span>
</span><span class='line'>		<span class="o">}</span>
</span><span class='line'>		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setFullname</span><span class="o">(</span><span class="n">String</span> <span class="n">fullname</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>			<span class="k">this</span><span class="o">.</span><span class="na">fullname</span> <span class="o">=</span> <span class="n">fullname</span><span class="o">;</span>
</span><span class='line'>		<span class="o">}</span>
</span><span class='line'>
</span><span class='line'>	<span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<blockquote><p>IP didalam file sesuaikan sama ip server anda, dan juga nama file php yang dibuat tadi</p></blockquote>

<h4>6 Buat java class baru &ldquo;StreamConverter.java&rdquo; mengubah data ke Stream agar dapat di tangkap di php.</h4>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (StreamConverter.java)</span> <a href='/downloads/code/android/webserver_php/StreamConverter.java'>download</a></figcaption>
 <div class="highlight"><table><tr><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">ivans</span><span class="o">.</span><span class="na">php</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.InputStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.HttpEntity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.HttpResponse</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.client.ClientProtocolException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.client.HttpClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.client.methods.HttpGet</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.http.impl.client.DefaultHttpClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.json.JSONArray</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.json.JSONException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.json.JSONObject</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.util.Log</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">StreamConverter</span> <span class="o">{</span>
</span><span class='line'>	<span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">convertStreamToString</span><span class="o">(</span><span class="n">InputStream</span> <span class="n">is</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>		<span class="cm">/*</span>
</span><span class='line'><span class="cm">		 * To convert the InputStream to String we use the</span>
</span><span class='line'><span class="cm">		 * BufferedReader.readLine() method. We iterate until the BufferedReader</span>
</span><span class='line'><span class="cm">		 * return null which means there&#39;s no more data to read. Each line will</span>
</span><span class='line'><span class="cm">		 * appended to a StringBuilder and returned as String.</span>
</span><span class='line'><span class="cm">		 */</span>
</span><span class='line'>		<span class="n">BufferedReader</span> <span class="n">reader</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="n">InputStreamReader</span><span class="o">(</span><span class="n">is</span><span class="o">));</span>
</span><span class='line'>		<span class="n">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>		<span class="n">String</span> <span class="n">line</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>		<span class="k">try</span> <span class="o">{</span>
</span><span class='line'>			<span class="k">while</span> <span class="o">((</span><span class="n">line</span> <span class="o">=</span> <span class="n">reader</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>				<span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">line</span> <span class="o">+</span> <span class="s">&quot;\n&quot;</span><span class="o">);</span>
</span><span class='line'>			<span class="o">}</span>
</span><span class='line'>		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>		<span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
</span><span class='line'>			<span class="k">try</span> <span class="o">{</span>
</span><span class='line'>				<span class="n">is</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>			<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>				<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>			<span class="o">}</span>
</span><span class='line'>		<span class="o">}</span>
</span><span class='line'>		<span class="k">return</span> <span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>	<span class="o">}</span>
</span><span class='line'>
</span><span class='line'>	<span class="cm">/*</span>
</span><span class='line'><span class="cm">	 * This is a test function which will connects to a given rest service and</span>
</span><span class='line'><span class="cm">	 * prints it&#39;s response to Android Log with labels &quot;Praeda&quot;.</span>
</span><span class='line'><span class="cm">	 */</span>
</span><span class='line'>	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">connect</span><span class="o">(</span><span class="n">String</span> <span class="n">url</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>		<span class="n">HttpClient</span> <span class="n">httpclient</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultHttpClient</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>		<span class="c1">// Prepare a request object</span>
</span><span class='line'>		<span class="n">HttpGet</span> <span class="n">httpget</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HttpGet</span><span class="o">(</span><span class="n">url</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>		<span class="c1">// Execute the request</span>
</span><span class='line'>		<span class="n">HttpResponse</span> <span class="n">response</span><span class="o">;</span>
</span><span class='line'>		<span class="k">try</span> <span class="o">{</span>
</span><span class='line'>			<span class="n">response</span> <span class="o">=</span> <span class="n">httpclient</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">httpget</span><span class="o">);</span>
</span><span class='line'>			<span class="c1">// Examine the response status</span>
</span><span class='line'>			<span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="s">&quot;Praeda&quot;</span><span class="o">,</span> <span class="n">response</span><span class="o">.</span><span class="na">getStatusLine</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>			<span class="c1">// Get hold of the response entity</span>
</span><span class='line'>			<span class="n">HttpEntity</span> <span class="n">entity</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getEntity</span><span class="o">();</span>
</span><span class='line'>			<span class="c1">// If the response does not enclose an entity, there is no need</span>
</span><span class='line'>			<span class="c1">// to worry about connection release</span>
</span><span class='line'>
</span><span class='line'>			<span class="k">if</span> <span class="o">(</span><span class="n">entity</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>				<span class="c1">// A Simple JSON Response Read</span>
</span><span class='line'>				<span class="n">InputStream</span> <span class="n">instream</span> <span class="o">=</span> <span class="n">entity</span><span class="o">.</span><span class="na">getContent</span><span class="o">();</span>
</span><span class='line'>				<span class="n">String</span> <span class="n">result</span> <span class="o">=</span> <span class="n">convertStreamToString</span><span class="o">(</span><span class="n">instream</span><span class="o">);</span>
</span><span class='line'>				<span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="s">&quot;Praeda&quot;</span><span class="o">,</span> <span class="n">result</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>				<span class="c1">// A Simple JSONObject Creation</span>
</span><span class='line'>				<span class="n">JSONObject</span> <span class="n">json</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JSONObject</span><span class="o">(</span><span class="n">result</span><span class="o">);</span>
</span><span class='line'>				<span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="s">&quot;Praeda&quot;</span><span class="o">,</span> <span class="s">&quot;&lt;jsonobject&gt;\n&quot;</span> <span class="o">+</span> <span class="n">json</span><span class="o">.</span><span class="na">toString</span><span class="o">()</span>
</span><span class='line'>						<span class="o">+</span> <span class="s">&quot;\n&lt;/jsonobject&gt;&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>				<span class="c1">// A Simple JSONObject Parsing</span>
</span><span class='line'>				<span class="n">JSONArray</span> <span class="n">nameArray</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="na">names</span><span class="o">();</span>
</span><span class='line'>				<span class="n">JSONArray</span> <span class="n">valArray</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="na">toJSONArray</span><span class="o">(</span><span class="n">nameArray</span><span class="o">);</span>
</span><span class='line'>				<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">valArray</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>					<span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="s">&quot;Praeda&quot;</span><span class="o">,</span>
</span><span class='line'>							<span class="s">&quot;&lt;jsonname&quot;</span> <span class="o">+</span> <span class="n">i</span> <span class="o">+</span> <span class="s">&quot;&gt;\n&quot;</span> <span class="o">+</span> <span class="n">nameArray</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="n">i</span><span class="o">)</span>
</span><span class='line'>									<span class="o">+</span> <span class="s">&quot;\n&lt;/jsonname&quot;</span> <span class="o">+</span> <span class="n">i</span> <span class="o">+</span> <span class="s">&quot;&gt;\n&quot;</span> <span class="o">+</span> <span class="s">&quot;&lt;jsonvalue&quot;</span>
</span><span class='line'>									<span class="o">+</span> <span class="n">i</span> <span class="o">+</span> <span class="s">&quot;&gt;\n&quot;</span> <span class="o">+</span> <span class="n">valArray</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="n">i</span><span class="o">)</span>
</span><span class='line'>									<span class="o">+</span> <span class="s">&quot;\n&lt;/jsonvalue&quot;</span> <span class="o">+</span> <span class="n">i</span> <span class="o">+</span> <span class="s">&quot;&gt;&quot;</span><span class="o">);</span>
</span><span class='line'>				<span class="o">}</span>
</span><span class='line'>
</span><span class='line'>				<span class="c1">// A Simple JSONObject Value Pushing</span>
</span><span class='line'>				<span class="n">json</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;sample key&quot;</span><span class="o">,</span> <span class="s">&quot;sample value&quot;</span><span class="o">);</span>
</span><span class='line'>				<span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="s">&quot;Praeda&quot;</span><span class="o">,</span> <span class="s">&quot;&lt;jsonobject&gt;\n&quot;</span> <span class="o">+</span> <span class="n">json</span><span class="o">.</span><span class="na">toString</span><span class="o">()</span>
</span><span class='line'>						<span class="o">+</span> <span class="s">&quot;\n&lt;/jsonobject&gt;&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>				<span class="c1">// Closing the input stream will trigger connection release</span>
</span><span class='line'>				<span class="n">instream</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>			<span class="o">}</span>
</span><span class='line'>
</span><span class='line'>		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ClientProtocolException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>			<span class="c1">// TODO Auto-generated catch block</span>
</span><span class='line'>			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>			<span class="c1">// TODO Auto-generated catch block</span>
</span><span class='line'>			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">JSONException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>			<span class="c1">// TODO Auto-generated catch block</span>
</span><span class='line'>			<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>		<span class="o">}</span>
</span><span class='line'>	<span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4>7 activity_main.xml</h4>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (activity_main.xml)</span> <a href='/downloads/code/android/webserver_php/activity_main.xml'>download</a></figcaption>
 <div class="highlight"><table><tr><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;LinearLayout</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>    <span class="na">xmlns:tools=</span><span class="s">&quot;http://schemas.android.com/tools&quot;</span>
</span><span class='line'>    <span class="na">android:layout_width=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>    <span class="na">android:layout_height=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>    <span class="na">android:orientation=</span><span class="s">&quot;vertical&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;Button</span>
</span><span class='line'>        <span class="na">android:id=</span><span class="s">&quot;@+id/Button01&quot;</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;50dp&quot;</span>
</span><span class='line'>        <span class="na">android:onClick=</span><span class="s">&quot;clickbuttonRecieve&quot;</span>
</span><span class='line'>        <span class="na">android:text=</span><span class="s">&quot;@string/Button01&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/Button&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;Button</span>
</span><span class='line'>        <span class="na">android:id=</span><span class="s">&quot;@+id/Button02&quot;</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;50dp&quot;</span>
</span><span class='line'>        <span class="na">android:onClick=</span><span class="s">&quot;clickbuttonSent&quot;</span>
</span><span class='line'>        <span class="na">android:text=</span><span class="s">&quot;@string/Button02&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/Button&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/LinearLayout&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
